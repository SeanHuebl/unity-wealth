// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: refresh_tokens.sql

package database

import (
	"context"
)

const createRefreshToken = `-- name: CreateRefreshToken :exec
INSERT INTO refresh_tokens (
        id,
        token_hash,
        expires_at,
        revoked_at,
        user_id,
        device_info_id
    )
VALUES (
        gen_random_uuid(),
        ?1,
        DATETIME('now', '+60 days'),
        NULL,
        ?2,
        ?3
    )
`

type CreateRefreshTokenParams struct {
	TokenHash    string
	UserID       interface{}
	DeviceInfoID interface{}
}

func (q *Queries) CreateRefreshToken(ctx context.Context, arg CreateRefreshTokenParams) error {
	_, err := q.db.ExecContext(ctx, createRefreshToken, arg.TokenHash, arg.UserID, arg.DeviceInfoID)
	return err
}

const revokeToken = `-- name: RevokeToken :exec
UPDATE refresh_tokens
SET revoked_at = NOW()
WHERE user_id = ?1
    AND device_info_id = ?2
    AND revoked_at IS NULL
`

type RevokeTokenParams struct {
	UserID       interface{}
	DeviceInfoID interface{}
}

func (q *Queries) RevokeToken(ctx context.Context, arg RevokeTokenParams) error {
	_, err := q.db.ExecContext(ctx, revokeToken, arg.UserID, arg.DeviceInfoID)
	return err
}
